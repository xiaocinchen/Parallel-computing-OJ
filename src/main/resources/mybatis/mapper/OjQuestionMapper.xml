<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.offer.oj.dao.mapper.OjQuestionMapper">
  <resultMap id="BaseResultMap" type="com.offer.oj.domain.OjQuestion">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="modifier" jdbcType="VARCHAR" property="modifier" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="picture_url" jdbcType="VARCHAR" property="pictureUrl" />
    <result column="category" jdbcType="VARCHAR" property="category" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.offer.oj.domain.OjQuestion">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Base_Column_List">
    id, create_time, modify_time, title, modifier, status, picture_url, category
  </sql>
  <sql id="Blob_Column_List">
    description
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from oj_question
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from oj_question
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.offer.oj.domain.OjQuestion">
    insert into oj_question (id, create_time, modify_time, 
      title, modifier, status, 
      picture_url, category, description
      )
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{title,jdbcType=VARCHAR}, #{modifier,jdbcType=VARCHAR}, #{status,jdbcType=BIT}, 
      #{pictureUrl,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.offer.oj.domain.OjQuestion">
    insert into oj_question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="pictureUrl != null">
        picture_url,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="pictureUrl != null">
        #{pictureUrl,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.offer.oj.domain.OjQuestion">
    update oj_question
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="pictureUrl != null">
        picture_url = #{pictureUrl,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.offer.oj.domain.OjQuestion">
    update oj_question
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      title = #{title,jdbcType=VARCHAR},
      modifier = #{modifier,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      picture_url = #{pictureUrl,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.offer.oj.domain.OjQuestion">
    update oj_question
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      title = #{title,jdbcType=VARCHAR},
      modifier = #{modifier,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      picture_url = #{pictureUrl,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 查列表 -->
  <select id="queryForList" parameterType="QuestionInnerQuery" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM
    oj_question
    WHERE 1=1
    <include refid="dynamicWhere"/>
    <include refid="pagination"/>
  </select>

  <!--  查数量-->
  <select id="queryForCount" parameterType="QuestionInnerQuery" resultType="Integer">
    SELECT count(*) FROM oj_question
    WHERE 1=1
    <include refid="dynamicWhere"/>
  </select>

  <sql id="dynamicWhere">
    <if test="id != null">
      AND id = #{id}
    </if>
    <if test="createTime != null">
      AND create_time = #{create_time}
    </if>
    <if test="modifyTime != null">
      AND modify_time = #{modify_time}
    </if>
    <if test="title != null">
      AND title = #{title}
    </if>
    <if test="modifier != null">
      AND modifier = #{modifier}
    </if>
    <if test="status != null">
      AND status = #{status}
    </if>
    <if test="pictureUrl != null">
      AND picture_url = #{picture_url}
    </if>
    <if test="category != null">
      AND category = #{category}
    </if>
    <if test="description != null">
      AND description = #{description}
    </if>
  </sql>

  <sql id="pagination">
    <if test="pageSize!=null and startRow!=null">
      <![CDATA[
          LIMIT #{startRow} , #{pageSize}
           ]]>
    </if>
  </sql>

  <select id="selectAllQuestionByTitle" resultMap="BaseResultMap">
    select * from oj_question where title like '%${title}%'
  </select>
</mapper>